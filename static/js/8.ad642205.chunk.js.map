{"version":3,"sources":["views/Login.js"],"names":["Login","useState","email","password","formData","setFormData","navigate","useNavigate","className","lg","tag","onSubmit","e","preventDefault","data","axios","post","API_BASE_URL","headers","then","response","title","Swal","fire","text","message","icon","confirmButtonText","localStorage","setItem","JSON","stringify","catch","error","for","id","name","placeholder","type","value","onChange","target"],"mappings":"0MA0HeA,UAzGD,WACZ,MAAgCC,mBAAS,CACvCC,MAAO,GACPC,SAAU,KAFZ,mBAAOC,EAAP,KAAiBC,EAAjB,KAMKC,EAAWC,cAiDhB,OACE,eAAC,IAAD,CAAKC,UAAU,OAAf,UACE,cAAC,IAAD,CAAKC,GAAG,MACR,cAAC,IAAD,CAAKA,GAAG,IAAR,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAWC,IAAI,KAAKF,UAAU,mBAA9B,sCAGA,cAAC,IAAD,CAAUA,UAAU,MAApB,SACE,cAAC,IAAD,CAAK,qBAAL,SACE,cAAC,IAAD,CAAKC,GAAG,KAAR,SACE,eAAC,IAAD,CAAME,SA1DC,SAACC,GACpBA,EAAEC,iBACF,IAAMC,EAAO,CACX,MAASV,EAASF,MAClB,SAAYE,EAASD,UAG1BY,IAAMC,KAAKC,wFAAoCH,EAAM,CAClDI,QAAS,CACL,eAAgB,mBAChB,OAAS,SAEdC,MACG,SAAAC,GAC8B,YAAxBA,EAASN,KAAKO,OAClBC,IAAKC,KAAK,CACRF,MAAO,WACPG,KAAMJ,EAASN,KAAKW,QACpBC,KAAM,UACNC,kBAAmB,OAGvBC,aAAaC,QAAQ,QAAQC,KAAKC,UAAUX,EAASN,KAAKA,OAE1DR,EAAS,YAAY,IAGnBgB,IAAKC,KAAK,CACRF,MAAO,SACPG,KAAOJ,EAASN,KAAKW,QACrBC,KAAM,aAMbM,OAAM,SAAAC,GACHX,IAAKC,KAAK,CACRF,MAAO,SACPG,KAAO,QACPE,KAAM,cAkBE,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOQ,IAAI,eAAX,mBACA,cAAC,IAAD,CACEC,GAAG,eACHC,KAAK,QACLC,YAAY,qBACZC,KAAK,QACLC,MAAOnC,EAASF,MAChBsC,SAAU,SAAC5B,GAAD,OAAOP,EAAY,2BAAID,GAAL,IAAeF,MAAOU,EAAE6B,OAAOF,eAI/D,eAAC,IAAD,WACE,cAAC,IAAD,CAAOL,IAAI,kBAAX,sBACA,cAAC,IAAD,CACEC,GAAG,kBACHC,KAAK,WACLC,YAAY,iBACZC,KAAK,WACLC,MAAOnC,EAASD,SAChBqC,SAAU,SAAC5B,GAAD,OAAOP,EAAY,2BAAID,GAAL,IAAeD,SAAUS,EAAE6B,OAAOF,eAKlE,cAAC,IAAD,CAAOD,KAAK,SAASC,MAAM,SAASH,KAAK,SAASC,YAAY,mBAO1E,cAAC,IAAD,CAAK5B,GAAG","file":"static/js/8.ad642205.chunk.js","sourcesContent":["import {\r\n  Card,\r\n  Row,\r\n  Col,\r\n  CardBody,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  CardTitle,\r\n} from \"reactstrap\";\r\nimport { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\nimport { API_BASE_URL } from \"../components/values/strings\";\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Login = () => {\r\n  const [formData, setFormData] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  \r\n const navigate = useNavigate();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    const data = {\r\n      \"email\": formData.email,\r\n      \"password\": formData.password,\r\n  };\r\n\r\n axios.post(API_BASE_URL + '/admin/auth/login', data, {\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n        'accept':'*/*'\r\n    }\r\n}).then(\r\n      response => {\r\n        if (response.data.title === 'success') {\r\n        Swal.fire({\r\n          title: 'Success!',\r\n          text: response.data.message,\r\n          icon: 'success',\r\n          confirmButtonText: 'ok'\r\n      });\r\n      \r\n      localStorage.setItem('token',JSON.stringify(response.data.data));\r\n\r\n      navigate('/starter', true);\r\n\r\n    }else{\r\n        Swal.fire({\r\n          title: 'Error!',\r\n          text:  response.data.message,\r\n          icon: 'error',\r\n      });\r\n      }\r\n        \r\n        },\r\n      )\r\n  .catch(error => {\r\n      Swal.fire({\r\n        title: 'Error!',\r\n        text:  'Error',\r\n        icon: 'error',\r\n    });\r\n    \r\n  });\r\n\r\n}\r\n\r\n  return (\r\n    <Row className=\"mt-5\">\r\n      <Col lg=\"4\"></Col>\r\n      <Col lg=\"4\">\r\n        <Card>\r\n          <CardTitle tag=\"h5\" className=\"text-center mt-3\">\r\n            Login To Admin Dashboard\r\n          </CardTitle>\r\n          <CardBody className=\"p-8\">\r\n            <Row justify-content>\r\n              <Col lg=\"12\">\r\n                <Form onSubmit={handleSubmit}>\r\n                  <FormGroup>\r\n                    <Label for=\"exampleEmail\">Email</Label>\r\n                    <Input\r\n                      id=\"exampleEmail\"\r\n                      name=\"email\"\r\n                      placeholder=\"Please Enter Email\"\r\n                      type=\"email\"\r\n                      value={formData.email}\r\n                      onChange={(e) => setFormData({...formData, email: e.target.value})}\r\n\r\n                    />\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <Label for=\"examplePassword\">Password</Label>\r\n                    <Input\r\n                      id=\"examplePassword\"\r\n                      name=\"password\"\r\n                      placeholder=\"Enter Password\"\r\n                      type=\"password\"\r\n                      value={formData.password}\r\n                      onChange={(e) => setFormData({...formData, password: e.target.value})}\r\n                      \r\n                    />\r\n                  </FormGroup>\r\n                  \r\n                  <Input type=\"submit\" value=\"Submit\" name=\"Submit\" placeholder=\"\" />\r\n                </Form>\r\n              </Col>\r\n            </Row>\r\n          </CardBody>\r\n        </Card>\r\n      </Col>\r\n      <Col lg=\"4\"></Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"sourceRoot":""}